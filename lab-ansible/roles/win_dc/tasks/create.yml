---
- name: features | Installing AD Domain Services
  win_feature: 
    name: 
      - RSAT-AD-AdminCenter
      - AD-Domain-Services
      - DNS
    include_management_tools: yes
    include_sub_features: yes
    state: present
  register: feature_check

- name: Reboot to complete feature setup (as required)
  win_reboot:
    pre_reboot_delay: 120
    reboot_timeout: 600
    post_reboot_delay: 120
  when: feature_check.reboot_required

- name: Set DNS server
  win_dns_client:
    adapter_names: "*"
    ipv4_addresses: "127.0.0.1"

- name: Check for xDnsServer Powershell module
  win_psmodule:
    name: xDnsServer
    state: present

- name: Configure DNS Forwarders
  win_dsc:
    resource_name: xDnsServerSetting
    Name: DNSServerProperties
    NoRecursion: false
    Forwarders: "{{ windows_domain_info['dns_forward_lookup'] }}"

- name: Creating a windows domain
  win_domain:
    dns_domain_name: "{{ windows_domain_controller_info['dns_domain_name'] }}"
    domain_netbios_name: "{{ windows_domain_controller_info['domain_netbios_name'] }}"
    safe_mode_password: "{{ windows_domain_controller_info['safe_mode_password'] }}"
  register: check_domain

- name: Reboot to complete domain controller setup (as required)
  win_reboot:
    pre_reboot_delay: 120
    reboot_timeout: 600
    post_reboot_delay: 120 # your mileage may vary
  when: check_domain.reboot_required

- name: Wait for domain fqdn resolution
  win_shell: |
    start-sleep -Seconds 5
    while($true){
      try {
          [Net.DNS]::GetHostEntry("{{ windows_domain_controller_info['dns_domain_name'] }}")
          write-output "DNS Resolution Success"
          break;
      }catch{
          write-output "DNS Resolution Failure"
      }
      start-sleep -Seconds 5
    }
  async: 900
  poll: 5
  register: async_out

- name: 'DNS - check on async task'
  async_status:
    jid: "{{ async_out.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 30