---
# list host with gathered ip address facts
- name: Debug variables
  debug:
    msg: "{{ hostvars[item].ansible_default_ipv4.address }}"
  when: hostvars[item].ansible_default_ipv4 is defined
  with_items: "{{ groups['splunk'] }}"

# Add powershell modules
- name: Check for xDnsServer Powershell module
  win_psmodule:
    name: xDnsServer
    state: present

# setup forwarding
- name: Configure DNS Forwarders
  win_dsc:
    resource_name: xDnsServerSetting
    Name: DNSServerProperties
    NoRecursion: false
    Forwarders: "{{ windows_domain_info['dns_forward_lookup'] }}"
    
# add a records
- name: Configure Splunk DNS
  win_dsc:
    resource_name: xDnsRecord
    Name: "{{ item.split('.')[0] | lower }}"
    Zone: "{{ windows_domain_controller_info['dns_domain_name'] }}"
    Target: "{{ hostvars[item].ansible_default_ipv4.address }}"
    Type: ARecord
  when: hostvars[item].ansible_default_ipv4 is defined
  with_items: "{{ groups['splunk'] }}"


# enable dns debug eos_logging
- name: Enable DNS debug logging
  win_shell: |
    New-Item -ErrorAction SilentlyContinue -Type Directory C:\DNS
    Set-DnsServerDiagnostics `
      -LogFilePath C:\DNS\dns.log `
      -UdpPackets $true `
      -TcpPackets $true `
      -Queries $true `
      -SendPackets $true `
      -ReceivePackets $true `
      -Answers $true `
      -UnmatchedResponse $true `
      -Updates $true `
      -Notifications $true `
      -QuestionTransactions $true `
      -EnableLoggingForLocalLookupEvent $true `
      -EnableLoggingForPluginDLLEvent $true `
      -EnableLoggingForRecursiveLookupEvent $true `
      -EnableLoggingForRemoteServerEvent $true `
      -EnableLoggingForServerStartStopEvent $true `
      -EnableLoggingForTombstoneEvent $true `
      -EnableLoggingForZoneDataWriteEvent $true `
      -EnableLoggingForZoneLoadingEvent $true 
  