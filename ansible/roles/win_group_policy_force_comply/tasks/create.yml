---
- name: Set ansible user for role
  set_fact:
    ansible_ssh_user: "{{ windows_domain_controller_info.domain_admin_user }}"
    ansible_ssh_pass: "{{ windows_domain_controller_info.domain_admin_password }}"
    
- name: Update Group Policy
  win_command: gpupdate /force

- name: Update WinRM to Use Autoenroll Certificate
  win_shell: |
    # force gpupdate
    gpupdate /force
    
    # get thumbprint for the domain certificate
    $thumbprint = Get-ChildItem  -Path Cert:\LocalMachine\MY | Where-Object {$_.Issuer -Match "CN={{ windows_certificate_authority_info['CACommonName'] }}, DC={{ windows_domain_controller_info['dns_domain_name']| replace('.', ', DC=') }}"} | Select-Object Thumbprint -First

    # only replace if autoenroll certificate found
    if($thumbprint -ne $null){
      write-output "Found Domain Certificate - Updating WinRM"
      
      $listener = Get-ChildItem -Path WSMan:\localhost\Listener | Where-Object { $_.Keys -contains "Transport=HTTPS" } | select-object *
      
      # update existing listener
      if($listener -ne $null){
        $name = $listener.PSChildName
        set-item WSMan:\localhost\Listener\$name\Hostname -Value "" -Force
        set-item WSMan:\localhost\Listener\$name\CertificateThumbprint -Value $thumbprint.Thumbprint -force
      }else{
        New-Item -Path WSMan:\LocalHost\Listener -Address * -Transport HTTPS -CertificateThumbPrint $thumbprint.Thumbprint -Port "5986" -force
      }

      # remove any other certs
      Get-ChildItem  -Path Cert:\LocalMachine\MY | Where-Object {$_.Thumbprint -notmatch $thumbprint.Thumbprint } | Remove-Item

    }else{
        write-output "Domain Certificate Not Found - Skipping"
    }

- name: Reboot to complete group policy compliance (NETWORK SERVICE => Event Log Readers)
  win_reboot:
    pre_reboot_delay: 120
    reboot_timeout: 600
    post_reboot_delay: 120

