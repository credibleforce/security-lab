---
    - name: Install epel-release
      yum: 
        name: epel-release 
        state: installed
      become: yes
      when: ansible_os_family == "RedHat"
      
    - name: Install scl manager - Centos
      yum: 
        name: "{{ item  }}"
        state: installed
      with_items:
        - "centos-release-scl"
      become: yes
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version==7


    - name: Add syslog-ng repo
      yum_repository:
        name: "czanik-syslog-ng326-epel-{{ ansible_distribution_major_version }}"
        description: Syslog-ng 3.26 repo
        #baseurl: https://copr.fedorainfracloud.org/coprs/czanik/syslog-ng326/repo/epel-7/czanik-syslog-ng326-epel-7.repo
        baseurl: "https://download.copr.fedorainfracloud.org/results/czanik/syslog-ng326/epel-{{ ansible_distribution_major_version }}-$basearch/"
        gpgkey: https://download.copr.fedorainfracloud.org/results/czanik/syslog-ng326/pubkey.gpg
        gpgcheck: yes
        enabled: yes
      become: yes

    - name: Install syslog-ng for centos 7
      yum:
        name: "{{ item }}"
        state: "installed"
      with_items:
        - "syslog-ng"
        - "syslog-ng-http"
        - "syslog-ng-python" 
        - "rh-python36" 
        - "libselinux-python"
        - "policycoreutils-python"
      become: yes
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version==7

    - name: Install syslog-ng for centos 8
      yum:
        name: "{{ item }}"
        state: "installed"
      with_items:
        - "syslog-ng"
        - "syslog-ng-http"
        - "syslog-ng-python" 
        - "python3" 
        - "python3-libselinux"
        - "python3-policycoreutils"
      become: yes
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version==8

    - name: Disable any syslog-ng services
      systemd:
        name: "syslog-ng"
        enabled: no
        state: "stopped" 
      become: yes

    # optionally remove this service altogether and replace with syslog-ng (out of scope)
    - name: Reload rsyslog to ensure syslogd.pid file is correct
      systemd:
        name: rsyslog
        state: "restarted"
      become: yes
      
    - name: Create sc4s directories
      file: 
        path: "{{ item }}"
        state: "directory"
        mode: 0755
      with_items:
        - "{{sc4s.opt}}/bin"
        - "{{sc4s.opt}}/local/context"
      become: yes

    - name: Download latest sc4s
      get_url:
        url: https://github.com/splunk/splunk-connect-for-syslog/releases/latest/download/baremetal.tar
        dest: /tmp/baremetal.tar
      become: yes

    - name: Download latest sc4s
      get_url:
        url: https://github.com/hairyhenderson/gomplate/releases/download/v3.5.0/gomplate_linux-amd64
        dest: "/usr/local/bin/gomplate"
      become: yes

    - name: Update gomplate binary permissions
      file:
        path: "/usr/local/bin/gomplate"
        mode: 0755
      become: yes

    - name: Untar latest sc4s
      unarchive:
        src: /tmp/baremetal.tar
        dest: "{{ sc4s.config.path }}"
        remote_src: yes
      become: yes
    
    - name: Setup preconfig for sc4s  
      template: 
        src: 'preconfig.sh.j2'
        dest: "{{ sc4s.service.preconfig.path }}"
        mode: 0755
      become: yes
      
    - name: Setup env for sc4s  
      template: 
        src: 'env_file.j2'
        dest: "{{ sc4s.service.env.path }}"
      become: yes

    - name: Setup service index mappings for sc4s
      template: 
        src: 'splunk_index.csv.j2'
        dest: "{{sc4s.opt}}/local/context/splunk_index.csv"
      become: yes

    - name: Run service preconfig
      command: "{{ sc4s.service.preconfig.path }}"

    - name: Symlink service index mapping
      file:
        src: "{{sc4s.opt}}/local/context/splunk_index.csv"
        dest: "{{sc4s.config.path}}/conf.d/local/context/splunk_index.csv"
        state: link
        force: yes
      become: yes
     
    - name: Allow service to communicate over non-standard HTTP port
      seport:
        ports: 8088
        proto: tcp
        setype: http_port_t
        state: present  
    
    - name: Setup service for sc4s 
      template: 
        src: 'sc4s.service.j2'
        dest: "{{ sc4s.service.path }}"
      become: yes
    
    - name: Reload systemd daemons
      systemd:
        daemon_reload: yes
    
    - name: Enable sc4s service and restart
      systemd:
        name: "{{ sc4s.service.name }}"
        enabled: yes
        state: "restarted"

    - name: Send test message using logger
      shell: |
        logger -P {{ item.value.port }} {{ '-T' if (item.value.protocol == 'tcp') else '-d' }} -n {{ item.value.destination }} "{{ item.value.message }}"
      with_dict: "{{ sc4s.test }}"


