@version:3.5
##########################################################################
#  Sylog-ng Conf
##########################################################################

options {
        chain_hostnames(no);
        create_dirs (no);
        dns_cache(yes);
        keep_hostname(yes);
        keep_timestamp(yes);
        log_fifo_size(2048);
        log_msg_size(8192);
        time_reopen (10);
        use_dns(yes);
        use_fqdn(yes);
};

#############################
## SOURCE DEFINITIONS
#############################

source s_cisco_acs {
        udp(ip(0.0.0.0) port(50513));
};
source s_cisco_asa {
        tcp(ip(0.0.0.0) port(50514) max-connections(100) use_dns(no) use_fqdn(no));
};
source s_cisco_ios {
        tcp(ip(0.0.0.0) port(50512) max_connections(100) time_zone("UTC"));
        udp(ip(0.0.0.0) port(50512) time_zone("UTC"));
};
source s_cisco_ucs {
        udp(ip(0.0.0.0) port(50515));
};
source s_cyberark {
        tcp(ip(0.0.0.0) port(50516) max_connections(100));
};
source s_f5_bigip {
        tcp(time_zone("America/Los_Angeles") ip(0.0.0.0) port(50517) max_connections(100));
        udp(time_zone("America/Los_Angeles") ip(0.0.0.0) port(50517));
};
source s_ontap {
        udp(time_zone("America/Los_Angeles") ip(0.0.0.0) port(50518));
};
source s_pan {
        udp(time_zone("America/Los_Angeles") ip(0.0.0.0) port(50519) use_dns(no) use_fqdn(no) );
};
source s_vmware {
        tcp(ip(0.0.0.0) port(1514) max_connections(100));
};


#############################
## TEMPLATE DEFINITIONS
#############################


template f5_template {
        template("${DATE} ${TZ} ${HOST} ${PRIORITY} ${MSG}\n"); template_escape(no);
};

template cisco_asa_template {
        template("<${PRI}>${DATE} ${FULLHOST}${MSG}\n"); template_escape(no);
};

template cisco_template {
        template("original_host=${HOST} <${PRI}>${MSG}\n"); template_escape(no);
};

template cisco_ucs_template {
        template("original_host=${HOST} <${PRI}>${MSG}\n"); template_escape(no);
};

template cisco_wlc_template {
        template("original_host=${HOST} <${PRI}>${DATE} ${MSGHDR}${MSG}\n"); template_escape(no);
};

template ontap_template {
        template("original_host=${HOST} <${PRI}>${DATE} ${TZ} ${MSGHDR}${MSG}\n"); template_escape(no);
};

template vmware_template {
        template("${DATE} ${HOST} ${MSGHDR}${MSG}\n"); template_escape(no);
};

# Aug 15 17:23:38 10.0.0.99 Aug 15 10:23:38 sample-cft-fw 1,2019/08/15 10:23:38,47010E7E6504A63,SYSTEM,routing,0,2019/08/15 10:23:38,,routed-config-p1-success,,0,0,general,informational,Route daemon configuration load phase-1 succeeded.,1038,0x0,0,0,0,0,,sample-cft-fw
template pan_template {
        template("${ISODATE} ${HOST} ${PANMSG}\n");
};

template hec_standard {
        template("original_host=${HOST} <${PRI}>${DATE} ${MSGHDR}${MSG}\n");
};

#############################
## DESTINATION DEFINITIONS
#############################

# For date-related macros:
# `S_` prefix: timestamp found in the log message.
# `R_` prefix: timestamp when syslog-ng received the message.
# `C_` prefix: current timestamp when syslog-ng resolves the macros.
# No prefix: Equal to corresponding `S_` prefix macro.

# New destination for storing data for Splunk to use. This will be used for normal traffic.
# The basis of the file path is to
#   1) indicate which of possibly several syslog-ng servers received the event
#   2) specify the date for easy log archiving and removal
#   3) indicate the upstream syslog source that sent the data (useful for enterprise-scale debug and determining data owner)
#   4) specify the host that generated the data
#   5) use facility in an attempt to keep separate sourcetypes separate.
# All this data survives and is indexed as the 'source' value for the event.

destination d_cisco_acs { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=cisco:acs --index=shared_ev_pci_net" template(cisco_template) ); };

destination d_cisco_ios { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=cisco:ios --index=shared_ev_pci_net" template(cisco_template) ); };

destination d_cisco_wlc { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=cisco:ios --index=shared_ev_pci_net" template(cisco_wlc_template) ); };

destination d_cisco_asa { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=cisco:asa --index=shared_ev_pci_sec" template(cisco_asa_template) ); };

destination d_cisco_asa_custom { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=cisco:asa --index=shared_ev_pci_sec" template(cisco_vfw_template) ); };

destination d_cisco_ucs { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=ciscoucs:syslog --index=shared_ev_infra_prod" template(cisco_ucs_template) ); };

# f5 parsing on splunk requires this specific format
destination d_f5_bigip { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=f5:bigip:syslog --index=shared_ev_pci_net" template(f5_template) ); };

destination d_pan { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=pan:log --index=shared_ev_pci_sec --host=$(echo ${HOST})" template(pan_template) time_zone("America/Los_Angeles") ); };

destination d_ontap { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=ontap:syslog --index=shared_ev_infra_prod"  template(ontap_template) time_zone("America/Los_Angeles") ); };

destination d_cyberark { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=cyberark:epv:cef --index=shared_ev_pci_sec"  template(hec_standard) ); };

destination d_vmware { program("/usr/local/bin/omsplunkhec.py SPLUNK_HEC_SERVER SPLUNK_HEC_SERVER --ssl --port=443 --sourcetype=vmw-syslog --index=shared_ev_infra_prod"  template(vmware_template) ); };

destination f5_bigip_loopback {
udp("127.0.0.1" port(50517));
};

destination ontap_loopback {
udp("127.0.0.1" port(50518));
};

#############################
## FILTER DEFINITIONS
#############################

#filter f_palo_alto {
#    host("^XX\.XX\.XX\.XX$") or
#    host("^XX\.XX\.XX\.XX$") or
#    host("^XX\.XX\.XX\.XX$") or
#    host("^XX\.XX\.XX\.XX$") or
#    host("^XX\.XX\.XX\.XX$") or
#    host("^XX\.XX\.XX\.XX$") or
#    host("^XX\.XX\.XX\.XX$");
#};

filter f_f5_bigip {
    match("^[A-Za-z]{3}-SLB-\d+-[A-Za-z]$" value("HOST") type("pcre"))
    or netmask(10.148.14.37/31)
    or netmask(10.144.14.37/31)
    or netmask(10.148.14.39/31)
    or netmask(10.144.14.39/31);
};

filter f_cisco_wlc {
    netmask(10.148.81.10/31)
    or netmask(10.144.81.10/31);
};

filter f_ontap {
    netmask(10.148.38.200/26)
    or netmask(10.144.38.128/28);
};

filter f_cisco_ucs {
    match("^.*%UCSM-\d+-[^:]+: " value("MSG") type("pcre"))
    or match("^[A-Za-z]{3}-com-\d+-[A-Za-z]\.domain\.com$" value("HOST") type("pcre"));
};

#############################
## REWRITE DEFINITIONS
#############################

rewrite r_custom_cisco_dvc {
    set("$(echo ${MSGHDR})",value("FULLHOST") condition("$(echo ${MSGHDR})"!=": "));
    set("$(echo ${FULLHOST}) ",value("FULLHOST") condition("$(echo ${MSGHDR})"==": "));
};


# horrible hack for panoram in pacific timezone (date is split across MSGHDR and MSG as well)
rewrite r_custom_msghdr {
    set("$(echo ${MSGHDR})$(echo ${MSG})" value("PANMSG"));
};

# 2019/10/12 20:51:59
rewrite r_rewrite_pan_date{
    subst(
        '^([^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*,[^,]*)',
        "$(echo $0${TZ})",
        value("$PANMSG"),
        type("pcre"),
        flags("ignore-case")
    );
};

#############################
## LOG OUTPUT DEFINITIONS
#############################


### CISCO ACS
log { source(s_cisco_acs); destination(d_cisco_acs); flags(final);};

### CISCO ASA
log { source(s_cisco_asa); rewrite(r_custom_cisco_dvc); destination(d_cisco_asa); flags(fallback);};

### CISCO UCS
log { source(s_cisco_ucs); destination(d_cisco_ucs); flags(final);};

### CISCO IOS (This source is UDP 514 so it will receive other device type message - see filter/forward below)
# F5 workaround - authentication messages being routed to 514 instead of assigned F5 port so forward to loopback
log { source(s_cisco_ios); filter(f_f5_bigip); destination(f5_bigip_loopback); flags(final);};
# Cisco UCS source handling
log { source(s_cisco_ios); filter(f_cisco_ucs); destination(d_cisco_ucs); flags(final);};
# Wireless LAN controller log format handling
log { source(s_cisco_ios); filter(f_cisco_wlc); destination(d_cisco_wlc); flags(final);};
# Netapp Ontap - messages being routed to 514 instead of assigned ontap port so forwarder to loopback
log { source(s_cisco_ios); filter(f_ontap); destination(ontap_loopback); flags(final);};
# Cisco default IOS
log { source(s_cisco_ios); destination(d_cisco_ios); flags(fallback);};

### F5
log { source(s_f5_bigip); destination(d_f5_bigip); flags(final);};

### ONTAPP
log { source(s_ontap); destination(d_ontap); flags(final);};

### PALO ALTO
log { source(s_pan); rewrite(r_custom_msghdr); rewrite(r_rewrite_pan_date); destination(d_pan); flags(final);};

### CYBERARK
log { source(s_cyberark); destination(d_cyberark); flags(final);};

### VMWARE
log { source(s_vmware); destination(d_vmware); flags(final);};

# Source additional configuration files (.conf extension only)
@include "/etc/syslog-ng/conf.d/*.conf"
